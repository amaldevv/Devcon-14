// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   	ViewModel.tt
// Version:		2.0
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls = WPAppStudio.Controls;
using Entities = WPAppStudio.Entities;
using EntitiesBase = WPAppStudio.Entities.Base;
using IServices = WPAppStudio.Services.Interfaces;
using IViewModels = WPAppStudio.ViewModel.Interfaces;
using Localization = WPAppStudio.Localization;
using Repositories = WPAppStudio.Repositories;
using Services = WPAppStudio.Services;
using ViewModelsBase = WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of Home_Info ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class Home_InfoViewModel : ViewModelsBase.VMBase, IViewModels.IHome_InfoViewModel
    {       

		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ISpeechService _speechService;
		private readonly IServices.IShareService _shareService;
		private readonly IServices.ILiveTileService _liveTileService;
		private readonly IServices.ILockScreenService _lockScreenService;
		private readonly Repositories.IHome_HomeDS _home_HomeDS;
		private readonly Repositories.IWPAppChallenge_AppChallengeDS _wPAppChallenge_AppChallengeDS;
		private readonly Repositories.IAgenda_AgendaDS _agenda_AgendaDS;
		private readonly Repositories.ISpeakers_SpeakersDS _speakers_SpeakersDS;
		private readonly Repositories.ISponsors_SponsorsDS _sponsors_SponsorsDS;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="Home_InfoViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        /// <param name="lockScreenService">The Lock Screen Service.</param>
        /// <param name="home_HomeDS">The Home_ Home D S.</param>
        /// <param name="wPAppChallenge_AppChallengeDS">The W P App Challenge_ App Challenge D S.</param>
        /// <param name="agenda_AgendaDS">The Agenda_ Agenda D S.</param>
        /// <param name="speakers_SpeakersDS">The Speakers_ Speakers D S.</param>
        /// <param name="sponsors_SponsorsDS">The Sponsors_ Sponsors D S.</param>
        public Home_InfoViewModel(IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ISpeechService speechService, IServices.IShareService shareService, IServices.ILiveTileService liveTileService, IServices.ILockScreenService lockScreenService, Repositories.IHome_HomeDS home_HomeDS, Repositories.IWPAppChallenge_AppChallengeDS wPAppChallenge_AppChallengeDS, Repositories.IAgenda_AgendaDS agenda_AgendaDS, Repositories.ISpeakers_SpeakersDS speakers_SpeakersDS, Repositories.ISponsors_SponsorsDS sponsors_SponsorsDS)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
			_lockScreenService = lockScreenService;
			_home_HomeDS = home_HomeDS;
			_wPAppChallenge_AppChallengeDS = wPAppChallenge_AppChallengeDS;
			_agenda_AgendaDS = agenda_AgendaDS;
			_speakers_SpeakersDS = speakers_SpeakersDS;
			_sponsors_SponsorsDS = sponsors_SponsorsDS;
        }
		
	
		private string _currentHome_InfoHtmlControl;

        /// <summary>
        /// CurrentHome_InfoHtmlControl property.
        /// </summary>		
        public string CurrentHome_InfoHtmlControl
        {
            get
            {
				
                if(_currentHome_InfoHtmlControl == null)
					_currentHome_InfoHtmlControl = _home_HomeDS.Get();
				return _currentHome_InfoHtmlControl;     
            }
            set
            {
                SetProperty(ref _currentHome_InfoHtmlControl, value);
            }
        }
	
		private ObservableCollection<Entities.AgendaDSSchema> _agenda_ListListControlCollection;

        /// <summary>
        /// Agenda_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<Entities.AgendaDSSchema> Agenda_ListListControlCollection
        {
            get
            {
				
                if(_agenda_ListListControlCollection == null)
					GetAgenda_ListListControlCollectionData();
				return _agenda_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _agenda_ListListControlCollection, value);
            }
        }
	
		private int _agenda_ListListControlCollectionPageNumber;

        /// <summary>
        /// Agenda_ListListControlCollectionPageNumber property.
        /// </summary>		
        public int Agenda_ListListControlCollectionPageNumber
        {
            get
            {
				return _agenda_ListListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _agenda_ListListControlCollectionPageNumber, value);
            }
        }
	
		private Entities.AgendaDSSchema _selectedAgenda_ListListControlCollection;

        /// <summary>
        /// SelectedAgenda_ListListControlCollection property.
        /// </summary>		
        public Entities.AgendaDSSchema SelectedAgenda_ListListControlCollection
        {
            get
            {
				return _selectedAgenda_ListListControlCollection;
            }
            set
            {
                SetProperty(ref _selectedAgenda_ListListControlCollection, value);
            }
        }
	
		private ObservableCollection<Entities.SpeakersDSSchema> _speakers_ListListControlCollection;

        /// <summary>
        /// Speakers_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<Entities.SpeakersDSSchema> Speakers_ListListControlCollection
        {
            get
            {
				
                if(_speakers_ListListControlCollection == null)
					GetSpeakers_ListListControlCollectionData();
				return _speakers_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _speakers_ListListControlCollection, value);
            }
        }
	
		private int _speakers_ListListControlCollectionPageNumber;

        /// <summary>
        /// Speakers_ListListControlCollectionPageNumber property.
        /// </summary>		
        public int Speakers_ListListControlCollectionPageNumber
        {
            get
            {
				return _speakers_ListListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _speakers_ListListControlCollectionPageNumber, value);
            }
        }
	
		private Entities.SpeakersDSSchema _selectedSpeakers_ListListControlCollection;

        /// <summary>
        /// SelectedSpeakers_ListListControlCollection property.
        /// </summary>		
        public Entities.SpeakersDSSchema SelectedSpeakers_ListListControlCollection
        {
            get
            {
				return _selectedSpeakers_ListListControlCollection;
            }
            set
            {
                _selectedSpeakers_ListListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.ISpeakers_DetailViewModel>(_selectedSpeakers_ListListControlCollection);
            }
        }
	
		private string _currentWPAppChallenge_InfoHtmlControl;

        /// <summary>
        /// CurrentWPAppChallenge_InfoHtmlControl property.
        /// </summary>		
        public string CurrentWPAppChallenge_InfoHtmlControl
        {
            get
            {
				
                if(_currentWPAppChallenge_InfoHtmlControl == null)
					_currentWPAppChallenge_InfoHtmlControl = _wPAppChallenge_AppChallengeDS.Get();
				return _currentWPAppChallenge_InfoHtmlControl;     
            }
            set
            {
                SetProperty(ref _currentWPAppChallenge_InfoHtmlControl, value);
            }
        }
	
		private ObservableCollection<Entities.SponsorsDSSchema> _sponsors_ListListControlCollection;

        /// <summary>
        /// Sponsors_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<Entities.SponsorsDSSchema> Sponsors_ListListControlCollection
        {
            get
            {
				
                if(_sponsors_ListListControlCollection == null)
					GetSponsors_ListListControlCollectionData();
				return _sponsors_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _sponsors_ListListControlCollection, value);
            }
        }
	
		private int _sponsors_ListListControlCollectionPageNumber;

        /// <summary>
        /// Sponsors_ListListControlCollectionPageNumber property.
        /// </summary>		
        public int Sponsors_ListListControlCollectionPageNumber
        {
            get
            {
				return _sponsors_ListListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _sponsors_ListListControlCollectionPageNumber, value);
            }
        }
	
		private Entities.SponsorsDSSchema _selectedSponsors_ListListControlCollection;

        /// <summary>
        /// SelectedSponsors_ListListControlCollection property.
        /// </summary>		
        public Entities.SponsorsDSSchema SelectedSponsors_ListListControlCollection
        {
            get
            {
				return _selectedSponsors_ListListControlCollection;
            }
            set
            {
                SetProperty(ref _selectedSponsors_ListListControlCollection, value);
            }
        }

        /// <summary>
        /// Delegate method for the RefreshAgenda_ListListControlCollectionCommand command.
        /// </summary>
        public async void RefreshAgenda_ListListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingAgenda_ListListControlCollection = true;
				var items = await  _agenda_AgendaDS.Refresh();
				Agenda_ListListControlCollection = items;
				Agenda_ListListControlCollectionPageNumber = 0;
			}
            catch (Exception ex)
            {
				Agenda_ListListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.DynamicDataError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingAgenda_ListListControlCollection = false;
			}
        }
		
		
        private bool _loadingAgenda_ListListControlCollection;
		
        public bool LoadingAgenda_ListListControlCollection
        {
            get { return _loadingAgenda_ListListControlCollection; }
            set { SetProperty(ref _loadingAgenda_ListListControlCollection, value); }
        }

        private ICommand _refreshAgenda_ListListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshAgenda_ListListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshAgenda_ListListControlCollectionCommand
        {
            get { return _refreshAgenda_ListListControlCollectionCommand = _refreshAgenda_ListListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshAgenda_ListListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetAgenda_ListListControlCollectionCommand command.
        /// </summary>
        public  void GetAgenda_ListListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetAgenda_ListListControlCollectionData(pageNumber);
        }
		

        private ICommand _getAgenda_ListListControlCollectionCommand;

        /// <summary>
        /// Gets the GetAgenda_ListListControlCollectionCommand command.
        /// </summary>
        public ICommand GetAgenda_ListListControlCollectionCommand
        {
            get { return _getAgenda_ListListControlCollectionCommand = _getAgenda_ListListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetAgenda_ListListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the RefreshSpeakers_ListListControlCollectionCommand command.
        /// </summary>
        public async void RefreshSpeakers_ListListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingSpeakers_ListListControlCollection = true;
				var items = await  _speakers_SpeakersDS.Refresh();
				Speakers_ListListControlCollection = items;
				Speakers_ListListControlCollectionPageNumber = 0;
			}
            catch (Exception ex)
            {
				Speakers_ListListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.DynamicDataError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingSpeakers_ListListControlCollection = false;
			}
        }
		
		
        private bool _loadingSpeakers_ListListControlCollection;
		
        public bool LoadingSpeakers_ListListControlCollection
        {
            get { return _loadingSpeakers_ListListControlCollection; }
            set { SetProperty(ref _loadingSpeakers_ListListControlCollection, value); }
        }

        private ICommand _refreshSpeakers_ListListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshSpeakers_ListListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshSpeakers_ListListControlCollectionCommand
        {
            get { return _refreshSpeakers_ListListControlCollectionCommand = _refreshSpeakers_ListListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshSpeakers_ListListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetSpeakers_ListListControlCollectionCommand command.
        /// </summary>
        public  void GetSpeakers_ListListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetSpeakers_ListListControlCollectionData(pageNumber);
        }
		

        private ICommand _getSpeakers_ListListControlCollectionCommand;

        /// <summary>
        /// Gets the GetSpeakers_ListListControlCollectionCommand command.
        /// </summary>
        public ICommand GetSpeakers_ListListControlCollectionCommand
        {
            get { return _getSpeakers_ListListControlCollectionCommand = _getSpeakers_ListListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetSpeakers_ListListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the RefreshSponsors_ListListControlCollectionCommand command.
        /// </summary>
        public async void RefreshSponsors_ListListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingSponsors_ListListControlCollection = true;
				var items = await  _sponsors_SponsorsDS.Refresh();
				Sponsors_ListListControlCollection = items;
				Sponsors_ListListControlCollectionPageNumber = 0;
			}
            catch (Exception ex)
            {
				Sponsors_ListListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.DynamicDataError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingSponsors_ListListControlCollection = false;
			}
        }
		
		
        private bool _loadingSponsors_ListListControlCollection;
		
        public bool LoadingSponsors_ListListControlCollection
        {
            get { return _loadingSponsors_ListListControlCollection; }
            set { SetProperty(ref _loadingSponsors_ListListControlCollection, value); }
        }

        private ICommand _refreshSponsors_ListListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshSponsors_ListListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshSponsors_ListListControlCollectionCommand
        {
            get { return _refreshSponsors_ListListControlCollectionCommand = _refreshSponsors_ListListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshSponsors_ListListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetSponsors_ListListControlCollectionCommand command.
        /// </summary>
        public  void GetSponsors_ListListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetSponsors_ListListControlCollectionData(pageNumber);
        }
		

        private ICommand _getSponsors_ListListControlCollectionCommand;

        /// <summary>
        /// Gets the GetSponsors_ListListControlCollectionCommand command.
        /// </summary>
        public ICommand GetSponsors_ListListControlCollectionCommand
        {
            get { return _getSponsors_ListListControlCollectionCommand = _getSponsors_ListListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetSponsors_ListListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechHome_InfoHtmlControlCommand command.
        /// </summary>
        public  void TextToSpeechHome_InfoHtmlControlCommandDelegate() 
        {
				_speechService.TextToSpeech(CurrentHome_InfoHtmlControl);
        }
		

        private ICommand _textToSpeechHome_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the TextToSpeechHome_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand TextToSpeechHome_InfoHtmlControlCommand
        {
            get { return _textToSpeechHome_InfoHtmlControlCommand = _textToSpeechHome_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechHome_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the ShareHome_InfoHtmlControlCommand command.
        /// </summary>
        public  void ShareHome_InfoHtmlControlCommandDelegate() 
        {
				_shareService.Share(@"Home", CurrentHome_InfoHtmlControl);
        }
		

        private ICommand _shareHome_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the ShareHome_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand ShareHome_InfoHtmlControlCommand
        {
            get { return _shareHome_InfoHtmlControlCommand = _shareHome_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(ShareHome_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartHome_InfoHtmlControlCommand command.
        /// </summary>
        public  void PinToStartHome_InfoHtmlControlCommandDelegate() 
        {
				_liveTileService.PinToStart(typeof(IViewModels.IHome_InfoViewModel), CreateTileInfoHome_InfoHtmlControl());
        }
		

        private ICommand _pinToStartHome_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the PinToStartHome_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand PinToStartHome_InfoHtmlControlCommand
        {
            get { return _pinToStartHome_InfoHtmlControlCommand = _pinToStartHome_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartHome_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechWPAppChallenge_InfoHtmlControlCommand command.
        /// </summary>
        public  void TextToSpeechWPAppChallenge_InfoHtmlControlCommandDelegate() 
        {
				_speechService.TextToSpeech(CurrentWPAppChallenge_InfoHtmlControl);
        }
		

        private ICommand _textToSpeechWPAppChallenge_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the TextToSpeechWPAppChallenge_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand TextToSpeechWPAppChallenge_InfoHtmlControlCommand
        {
            get { return _textToSpeechWPAppChallenge_InfoHtmlControlCommand = _textToSpeechWPAppChallenge_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechWPAppChallenge_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the ShareWPAppChallenge_InfoHtmlControlCommand command.
        /// </summary>
        public  void ShareWPAppChallenge_InfoHtmlControlCommandDelegate() 
        {
				_shareService.Share(@"WP App Challenge", CurrentWPAppChallenge_InfoHtmlControl);
        }
		

        private ICommand _shareWPAppChallenge_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the ShareWPAppChallenge_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand ShareWPAppChallenge_InfoHtmlControlCommand
        {
            get { return _shareWPAppChallenge_InfoHtmlControlCommand = _shareWPAppChallenge_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(ShareWPAppChallenge_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartWPAppChallenge_InfoHtmlControlCommand command.
        /// </summary>
        public  void PinToStartWPAppChallenge_InfoHtmlControlCommandDelegate() 
        {
				_liveTileService.PinToStart(typeof(IViewModels.IHome_InfoViewModel), CreateTileInfoWPAppChallenge_InfoHtmlControl());
        }
		

        private ICommand _pinToStartWPAppChallenge_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the PinToStartWPAppChallenge_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand PinToStartWPAppChallenge_InfoHtmlControlCommand
        {
            get { return _pinToStartWPAppChallenge_InfoHtmlControlCommand = _pinToStartWPAppChallenge_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartWPAppChallenge_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the SetLockScreenCommand command.
        /// </summary>
        public  void SetLockScreenCommandDelegate() 
        {
				_lockScreenService.SetLockScreen("LockScreen-bdca34d3-5592-441d-9264-ae93c99b6689.jpg");
        }
		

        private ICommand _setLockScreenCommand;

        /// <summary>
        /// Gets the SetLockScreenCommand command.
        /// </summary>
        public ICommand SetLockScreenCommand
        {
            get { return _setLockScreenCommand = _setLockScreenCommand ?? new ViewModelsBase.DelegateCommand(SetLockScreenCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the AboutCommand command.
        /// </summary>
        public  void AboutCommandDelegate() 
        {
				_navigationService.NavigateTo<IViewModels.IAboutViewModel>();
        }
		

        private ICommand _aboutCommand;

        /// <summary>
        /// Gets the AboutCommand command.
        /// </summary>
        public ICommand AboutCommand
        {
            get { return _aboutCommand = _aboutCommand ?? new ViewModelsBase.DelegateCommand(AboutCommandDelegate); }
        }

        private async void GetAgenda_ListListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingAgenda_ListListControlCollection = true;
				Agenda_ListListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items = await _agenda_AgendaDS.GetData(pageNumber);
                    Agenda_ListListControlCollection = items;
				}
                else   
				{
					var items = await _agenda_AgendaDS.GetData(pageNumber);
                    foreach (var item in items)                    
                        Agenda_ListListControlCollection.Add(item);
				}
			}
            catch (Exception ex)
            {
				Agenda_ListListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.DynamicDataError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingAgenda_ListListControlCollection = false;
			}
		}

        private async void GetSpeakers_ListListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingSpeakers_ListListControlCollection = true;
				Speakers_ListListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items = await _speakers_SpeakersDS.GetData(pageNumber);
                    Speakers_ListListControlCollection = items;
				}
                else   
				{
					var items = await _speakers_SpeakersDS.GetData(pageNumber);
                    foreach (var item in items)                    
                        Speakers_ListListControlCollection.Add(item);
				}
			}
            catch (Exception ex)
            {
				Speakers_ListListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.DynamicDataError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingSpeakers_ListListControlCollection = false;
			}
		}

        private async void GetSponsors_ListListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingSponsors_ListListControlCollection = true;
				Sponsors_ListListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items = await _sponsors_SponsorsDS.GetData(pageNumber);
                    Sponsors_ListListControlCollection = items;
				}
                else   
				{
					var items = await _sponsors_SponsorsDS.GetData(pageNumber);
                    foreach (var item in items)                    
                        Sponsors_ListListControlCollection.Add(item);
				}
			}
            catch (Exception ex)
            {
				Sponsors_ListListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.DynamicDataError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingSponsors_ListListControlCollection = false;
			}
		}
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the Home_InfoHtmlControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfoHome_InfoHtmlControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = @"Home",
                Title = @"Home",
                BackTitle = @"Home",
                BackContent = CurrentHome_InfoHtmlControl,
                Count = 0,
                BackgroundImagePath = string.Empty,
                BackBackgroundImagePath = string.Empty,
                LogoPath = "Logo-53837e26-d89c-4b47-8990-3d7a578665e6.png"
            };
            return tileInfo;
        }
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the WPAppChallenge_InfoHtmlControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfoWPAppChallenge_InfoHtmlControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = @"WP App Challenge",
                Title = @"WP App Challenge",
                BackTitle = @"WP App Challenge",
                BackContent = CurrentWPAppChallenge_InfoHtmlControl,
                Count = 0,
                BackgroundImagePath = string.Empty,
                BackBackgroundImagePath = string.Empty,
                LogoPath = "Logo-53837e26-d89c-4b47-8990-3d7a578665e6.png"
            };
            return tileInfo;
        }
    }
}
